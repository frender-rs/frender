crate::macros::all_intrinsic_component_tags! {
    // html
    a,
    abbr: AbbrComponent,
    address: AddressComponent,
    area,
    article: ArticleComponent,
    aside: AsideComponent,
    audio,
    b: BComponent,
    base,
    bdi: BdiComponent,
    bdo: BdoComponent,
    big: BigComponent,
    blockquote,
    body: { BodyComponent => web_sys::HtmlBodyElement },
    br: { BrComponent => web_sys::HtmlBrElement },
    button,
    canvas,
    caption: CaptionComponent,
    cite: CiteComponent,
    code: CodeComponent,
    col,
    colgroup,
    data,
    datalist: { DataListComponent => web_sys::HtmlDataListElement },
    dd: DdComponent,
    del,
    details,
    dfn: DfnComponent,
    dialog,
    div: { DivComponent => web_sys::HtmlDivElement },
    dl: { DListComponent => web_sys::HtmlDListElement },
    dt: DtComponent,
    em: EmComponent,
    embed,
    fieldset,
    figcaption: FigCaptionComponent,
    figure: FigureComponent,
    footer: FooterComponent,
    form,
    h1: { H1Component => web_sys::HtmlHeadingElement },
    h2: { H2Component => web_sys::HtmlHeadingElement },
    h3: { H3Component => web_sys::HtmlHeadingElement },
    h4: { H4Component => web_sys::HtmlHeadingElement },
    h5: { H5Component => web_sys::HtmlHeadingElement },
    h6: { H6Component => web_sys::HtmlHeadingElement },
    head: { HeadComponent => web_sys::HtmlHeadElement },
    header: HeaderComponent,
    hgroup: HGroupComponent,
    hr: { HrComponent => web_sys::HtmlHrElement },
    html,
    i: IComponent,
    iframe,
    img,
    input,
    ins,
    kbd: KbdComponent,
    keygen,
    label,
    legend: { LegendComponent => web_sys::HtmlLegendElement },
    li,
    link,
    main: MainComponent,
    map,
    mark: MarkComponent,
    menu,
    menuitem: MenuItemComponent,
    meta,
    meter,
    nav: NavComponent,
    noindex: NoIndexComponent,
    noscript: NoScriptComponent,
    object,
    ol,
    // optgroup: React.OptgroupHTMLAttributes<HTMLOptGroupElement>, HTMLOptGroupElement;
    // option: React.OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement;
    // output: React.OutputHTMLAttributes<HTMLElement>, HTMLElement;
    p: { ParagraphComponent => web_sys::HtmlParagraphElement },
    // param: React.ParamHTMLAttributes<HTMLParamElement>, HTMLParamElement;
    picture: PictureComponent,
    pre: { PreComponent => web_sys::HtmlPreElement },
    // progress: React.ProgressHTMLAttributes<HTMLProgressElement>, HTMLProgressElement;
    // q: React.QuoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement;
    rp: RpComponent,
    rt: RtComponent,
    ruby: RubyComponent,
    s: SComponent,
    samp: SampComponent,
    // slot: React.SlotHTMLAttributes<HTMLSlotElement>, HTMLSlotElement;
    // script: React.ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement;
    section: SectionComponent,
    // select: React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement;
    small: SmallComponent,
    // source: React.SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement;
    span: { SpanComponent => web_sys::HtmlSpanElement },
    strong: StrongComponent,
    // style: React.StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement;
    sub: SubComponent,
    summary: SummaryComponent,
    sup: SupComponent,
    // table: React.TableHTMLAttributes<HTMLTableElement>, HTMLTableElement;
    template: { TemplateComponent => web_sys::HtmlTemplateElement },
    tbody: { TableBodyComponent => web_sys::HtmlTableSectionElement },
    // td: React.TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement;
    // textarea: React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement;
    tfoot: { TableFootComponent => web_sys::HtmlTableSectionElement },
    // th: React.ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement;
    thead: { TableHeadComponent => web_sys::HtmlTableSectionElement },
    // time: React.TimeHTMLAttributes<HTMLElement>, HTMLElement;
    title: { TitleComponent => web_sys::HtmlTitleElement },
    tr: { TableRowComponent => web_sys::HtmlTableRowElement },
    // track: React.TrackHTMLAttributes<HTMLTrackElement>, HTMLTrackElement;
    u: UComponent,
    ul: { UListComponent => web_sys::HtmlUListElement },
    var: VarComponent,
    // video: React.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement;
    wbr: WbrComponent,
    // webview: React.WebViewHTMLAttributes<HTMLWebViewElement>, HTMLWebViewElement;
}
